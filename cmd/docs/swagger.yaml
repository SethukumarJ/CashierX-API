basePath: /
definitions:
  pb.CreateAccountResponse:
    properties:
      error:
        type: string
      id:
        type: integer
      status:
        type: integer
    type: object
  pb.DeleteAccountResponse:
    properties:
      error:
        type: string
      id:
        type: integer
      status:
        type: integer
    type: object
  pb.DeleteUserResponse:
    properties:
      error:
        type: string
      id:
        type: integer
      status:
        type: integer
    type: object
  pb.FindAccountData:
    properties:
      account_number:
        type: integer
      accountHolder:
        type: string
      created_at:
        type: string
      id:
        type: integer
      type:
        type: string
      user_id:
        type: integer
    type: object
  pb.FindAccountResponse:
    properties:
      data:
        $ref: '#/definitions/pb.FindAccountData'
      error:
        type: string
      status:
        type: integer
    type: object
  pb.FindUser:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      user_name:
        type: string
    type: object
  pb.FindUserResponse:
    properties:
      data:
        $ref: '#/definitions/pb.FindUser'
      error:
        type: string
      status:
        type: integer
    type: object
  pb.GetAccountsResponse:
    properties:
      accounts:
        items:
          $ref: '#/definitions/pb.FindAccountData'
        type: array
      error:
        type: string
      status:
        type: integer
    type: object
  pb.GetBalanceResponse:
    properties:
      balance:
        type: number
      error:
        type: string
      status:
        type: integer
    type: object
  pb.GetUsersResponse:
    properties:
      error:
        type: string
      status:
        type: integer
      user:
        items:
          $ref: '#/definitions/pb.User'
        type: array
    type: object
  pb.LoginResponse:
    properties:
      access_token:
        type: string
      error:
        type: string
      refressh_token:
        type: string
      status:
        type: integer
    type: object
  pb.RegisterResponse:
    properties:
      error:
        type: string
      id:
        type: integer
      status:
        type: integer
    type: object
  pb.TokenRefreshResponse:
    properties:
      error:
        type: string
      status:
        type: integer
      token:
        type: string
    type: object
  pb.UpdateAccountResponse:
    properties:
      error:
        type: string
      id:
        type: integer
      status:
        type: integer
    type: object
  pb.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      user_name:
        type: string
    type: object
  routes.CreateAccountRequestBody:
    properties:
      balance:
        type: integer
      type:
        type: string
    type: object
  routes.LoginRequestBody:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  routes.RegisterRequestBody:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      user_name:
        type: string
    type: object
  routes.UpdateAccountRequestBody:
    properties:
      balance:
        type: integer
      type:
        type: string
    type: object
host: localhost:3005
info:
  contact:
    email: sethukumarj.76@gmail.com
    name: API Support
    url: sethukumarj.com
  description: This is Money management project. You can visit the GitHub repository
    at https://github.com/SethukumarJ/CashierX-API-Gateway
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: CashierX API
  version: "1.0"
paths:
  /account/balance/{id}:
    get:
      consumes:
      - application/json
      description: Get Balance
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.GetBalanceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pb.GetBalanceResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.GetBalanceResponse'
      security:
      - BearerAuth: []
      summary: Get Balance
      tags:
      - Account-Service
  /account/create:
    post:
      operationId: Create Account
      parameters:
      - description: Create Account
        in: body
        name: CreateAccount
        required: true
        schema:
          $ref: '#/definitions/routes.CreateAccountRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.CreateAccountResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.CreateAccountResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/pb.CreateAccountResponse'
      security:
      - BearerAuth: []
      summary: Create account
      tags:
      - Account-Service
  /account/delete/{id}:
    delete:
      operationId: Delete account
      parameters:
      - description: Id of the account to be deleted
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.DeleteAccountResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.DeleteAccountResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/pb.DeleteAccountResponse'
      security:
      - BearerAuth: []
      summary: Delete account
      tags:
      - Account-Service
  /account/get/{id}:
    get:
      operationId: Find account by id
      parameters:
      - description: Find account by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.FindAccountResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.FindAccountResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/pb.FindAccountResponse'
      security:
      - BearerAuth: []
      summary: Find user by id
      tags:
      - Account-Service
  /account/getall/{id}:
    get:
      operationId: Get accounts
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.GetAccountsResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.GetAccountsResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/pb.GetAccountsResponse'
      security:
      - BearerAuth: []
      summary: Get accounts of  user
      tags:
      - Account-Service
  /account/update/{id}:
    put:
      operationId: Update Account
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: Create Account
        in: body
        name: UpdateAccount
        required: true
        schema:
          $ref: '#/definitions/routes.UpdateAccountRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.UpdateAccountResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.UpdateAccountResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/pb.UpdateAccountResponse'
      security:
      - BearerAuth: []
      summary: Update account
      tags:
      - Account-Service
  /auth/login:
    post:
      operationId: User Login
      parameters:
      - description: User Login
        in: body
        name: LoginUser
        required: true
        schema:
          $ref: '#/definitions/routes.LoginRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.LoginResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.LoginResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/pb.LoginResponse'
      summary: Login user
      tags:
      - Authentication-Service
  /auth/register:
    post:
      operationId: User Registration
      parameters:
      - description: User registration
        in: body
        name: RegisterUser
        required: true
        schema:
          $ref: '#/definitions/routes.RegisterRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.RegisterResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.RegisterResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/pb.RegisterResponse'
      summary: Register new user
      tags:
      - Authentication-Service
  /auth/token-refresh:
    post:
      operationId: User RefreshToken
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.TokenRefreshResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.TokenRefreshResponse'
      security:
      - BearerAuth: []
      summary: Refresh token for users
      tags:
      - Authentication-Service
  /user/delete/{id}:
    delete:
      operationId: Delete user
      parameters:
      - description: Id of the user to be deleted
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.DeleteUserResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.DeleteUserResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/pb.DeleteUserResponse'
      summary: Delete user
      tags:
      - User-Section
  /user/finduser/{id}:
    get:
      operationId: Find user by id
      parameters:
      - description: Find user by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.FindUserResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.FindUserResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/pb.FindUserResponse'
      summary: Find user by id
      tags:
      - User-Section
  /user/getusers:
    get:
      operationId: Get users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.GetUsersResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.GetUsersResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/pb.GetUsersResponse'
      summary: Get users
      tags:
      - User-Section
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BearerAuth:
    in: header
    name: authorization
    type: apiKey
swagger: "2.0"
